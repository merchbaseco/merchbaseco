name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: merchbaseco/merchbaseco

jobs:
  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          secrets: |
            hugeicons_token=${{ secrets.HUGEICONS_TOKEN }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      IMAGE_TAG: ${{ github.sha }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Deploy merchbase marketing site
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          envs: IMAGE_TAG,GHCR_USERNAME,GHCR_TOKEN
          script: |
            set -euo pipefail
            REPO_DIR="/home/merchbase/merchbase-infra"
            mkdir -p "${HOME}/.ssh"
            chmod 700 "${HOME}/.ssh"
            touch "${HOME}/.ssh/known_hosts"
            chmod 600 "${HOME}/.ssh/known_hosts"
            if ! grep -q "github.com" "${HOME}/.ssh/known_hosts" 2>/dev/null; then
              ssh-keyscan -H github.com >> "${HOME}/.ssh/known_hosts"
            fi
            if [[ ! -d "${REPO_DIR}/.git" ]]; then
              git clone git@github.com:merchbaseco/infra.git "${REPO_DIR}"
            fi
            if ! git config --global --get safe.directory "${REPO_DIR}" >/dev/null 2>&1; then
              git config --global --add safe.directory "${REPO_DIR}"
            fi
            cd "${REPO_DIR}"
            git pull --ff-only
            cd stack/merchbaseco
            if [[ -n "${GHCR_USERNAME:-}" && -n "${GHCR_TOKEN:-}" ]]; then
              echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_USERNAME}" --password-stdin
            fi
            export MERCHBASECO_IMAGE_TAG="$IMAGE_TAG"
            ./deploy.sh

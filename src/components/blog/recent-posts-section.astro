---
import { Squircle } from "@/components/ui/squircle";
import { HugeiconsIcon } from "@merchbaseco/icons";
import { LinkSquare01BulkRounded } from "@merchbaseco/icons/core-bulk-rounded";
import { getCollection } from "astro:content";
import SiteFooter from "@/components/site-footer.astro";

interface Props {
  limit?: number;
}

const { limit = 3 } = Astro.props as Props;

const site = Astro.site ?? new URL("http://localhost/");
const blogPostHref = (slug: string) => new URL(`./blog/${slug}/`, site).pathname;

const formatDate = (date: Date) =>
  date.toLocaleDateString("en-US", {
    month: "short",
    day: "numeric",
    year: "numeric",
  });

const recentPosts = (await getCollection("blog"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, limit);
---

{
  recentPosts.length > 0 && (
    <section class="bg-gray-300/20 border-t backdrop-blur-sm backdrop-hue-rotate-30 pt-12 mt-32 pb-9 pl-9 relative z-50">
      <h3 class="pl-1 text-2xl font-semibold w-full leading-10">
        Notes, Snippets, and Shareables
      </h3>
      <h4 class="pl-1 text-lg font-light w-full">
        Check back periodically for updates! We keep up with the trends, and try to share useful stuff with the community.
      </h4>
      <div class="mt-12 grid grid-cols-[24rem,24rem,24rem,24rem] gap-6 justify-items-start">
        {recentPosts.map((post) => (
          <a
            key={post.id}
            class="group block focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2 focus-visible:ring-offset-white rounded-3xl"
            href={blogPostHref(post.slug)}
          >
            <Squircle
              cornerRadius={24}
              cornerSmoothing={0.8}
              className="group relative flex w-96 h-72 flex-col justify-between rounded-3xl border border-gray-200 bg-white p-6 shadow-sm transition-all duration-200 hover:-translate-y-1 hover:shadow-md"
            >
              <div class="flex flex-1 flex-col justify-between">
                <div>
                  <h3 class="text-xl font-semibold pr-16">
                    {post.data.title}
                  </h3>
                  <p class="mt-3 text-gray-600 leading-7">
                    {post.data.description}
                  </p>
                </div>
                <div class="flex justify-end">
                  <div class="bg-gray-100 uppercase text-sm rounded-lg px-3 h-8 flex items-center tracking-wide text-indigo-600">
                    <span class="uppercase">
                      Blog Post
                    </span>
                    <div class="h-full w-px bg-white mx-3" />
                    {formatDate(post.data.publishDate)}
                  </div>
                </div>
                <div
                  class="absolute top-6 right-6 opacity-50 group-hover:opacity-100"
                  aria-hidden="true"
                >
                  <HugeiconsIcon
                    icon={LinkSquare01BulkRounded}
                    size={32}
                    color="currentColor"
                    className="transition-colors"
                  />
                </div>
              </div>
            </Squircle>
          </a>
        ))}

        {[1, 2, 3, 4, 5, 6].map((value) => (
          <Squircle
            key={value}
            cornerRadius={24}
            cornerSmoothing={0.8}
            className="group relative flex w-96 h-72 flex-col justify-between rounded-3xl bg-gray-200/60 p-6 shadow-sm"
          />
        ))}
      </div>

      <SiteFooter class="mt-24" />
    </section>
  )
}

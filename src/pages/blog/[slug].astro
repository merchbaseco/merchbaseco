---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
  }));
}

const slug = Astro.params.slug;

if (!slug) {
  return Astro.redirect("/blog");
}

const entry = await getEntry("blog", slug);

if (!entry) {
  return Astro.redirect("/blog");
}

const { Content } = await entry.render();
const { data } = entry;
const formattedDate = data.publishDate.toLocaleDateString("en-US", {
  month: "long",
  day: "numeric",
  year: "numeric",
});
const publishedDateTime = data.publishDate.toISOString();
---

<BaseLayout title={`${data.title} Â· MerchBase`}>
  <div class="bg-white">
    <main class="mx-auto max-w-4xl px-6 py-16">
      <a
        href="/blog"
        class="group mb-10 inline-flex items-center gap-2 text-sm font-semibold text-emerald-600 transition hover:text-emerald-700"
      >
        <span class="inline-flex h-8 w-8 items-center justify-center rounded-full border border-emerald-100 bg-white text-emerald-600 transition group-hover:border-emerald-200 group-hover:bg-emerald-50">
          <svg
            class="h-4 w-4"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="m12 19-7-7 7-7" />
            <path d="M19 12H5" />
          </svg>
        </span>
        Back to updates
      </a>

      <header class="mb-12 space-y-6">
        <div class="inline-flex items-center gap-3 rounded-full border border-gray-200 bg-white px-4 py-2 text-xs font-semibold uppercase tracking-[0.3em] text-gray-500">
          <span class="h-2 w-2 rounded-full bg-emerald-500" />
          <time datetime={publishedDateTime}>{formattedDate}</time>
        </div>
        <h1 class="font-display text-5xl font-semibold leading-tight text-gray-900 md:text-6xl">
          {data.title}
        </h1>
        <p class="max-w-2xl text-lg text-gray-600 md:text-xl">{data.description}</p>
      </header>

      <section class="rounded-3xl border border-gray-200 bg-white p-10 shadow-sm">
        <article class="rich-text">
          <Content />
        </article>
      </section>
    </main>
  </div>
</BaseLayout>

<style>
  .rich-text {
    display: grid;
    gap: 1.75rem;
    color: rgb(55 65 81);
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .rich-text > :first-child {
    margin-top: 0;
  }

  .rich-text :is(h2, h3, h4, h5, h6) {
    margin-top: 2.5rem;
    color: rgb(17 24 39);
    font-weight: 600;
    letter-spacing: -0.01em;
  }

  .rich-text :is(h2, h3, h4, h5, h6) + * {
    margin-top: 1rem;
  }

  .rich-text p {
    margin: 0;
  }

  .rich-text a {
    color: rgb(5 150 105);
    font-weight: 600;
    text-decoration: none;
  }

  .rich-text a:hover {
    color: rgb(4 120 87);
  }

  .rich-text ul,
  .rich-text ol {
    margin: 0;
    padding-left: 1.5rem;
    display: grid;
    gap: 0.75rem;
  }

  .rich-text blockquote {
    margin: 0;
    padding-left: 1.25rem;
    border-left: 4px solid rgba(16, 185, 129, 0.35);
    color: rgb(75 85 99);
    font-style: italic;
  }

  .rich-text code {
    background-color: rgb(243 244 246);
    padding: 0.125rem 0.375rem;
    border-radius: 0.375rem;
    font-size: 0.95em;
    color: rgb(17 24 39);
  }

  .rich-text pre {
    margin: 0;
    padding: 1.5rem;
    border-radius: 1rem;
    background-color: rgba(17, 24, 39, 0.95);
    color: rgb(249 250 251);
    overflow-x: auto;
  }
</style>
